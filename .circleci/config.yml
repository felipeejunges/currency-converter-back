jobs:
  build:
    docker:
      - image: "cimg/ruby:3.2.1-browsers"
    steps:
      - checkout
      - ruby/install-deps
  checking:
    docker:
      - image: "cimg/ruby:3.2.1-browsers"
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
  test:
    docker:
      - image: "cimg/ruby:3.2.1-browsers"
      - environment:
          POSTGRES_DB: stocki_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        image: "postgres:15.1"
      - image: "cimg/redis:7.0.8"
    environment:
      PAGER: cat
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: password
      RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - run:
          command: "dockerize -wait tcp://localhost:5432 -timeout 1m"
          name: Wait for DB
      - run: sudo apt install -y postgresql-client || sudo apt-get update && sudo apt install -y postgresql-client
      - run: sudo apt-get update && sudo apt install -y imagemagick
      - run:
          name: Install libffi (modern version)
          command: sudo apt-get update && sudo apt-get install -y libffi-dev
      - run:
          command: "bundle exec rails db:create && bundle exec rails db:migrate"
          name: Database setup
      - run:
          command: |
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            xvfb-run --auto-servernum bundle exec rspec $TESTFILES --profile 10 --color --format progress --format RspecJunitFormatter --out /tmp/test-results/rspec.xml
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: tmp/test_prof

version: 2.1
orbs:
  ruby: circleci/ruby@2.0.0
  browser-tools: circleci/browser-tools@1.4.1
workflows:
  build_and_test:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build